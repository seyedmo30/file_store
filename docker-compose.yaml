version: '3.8'

services:


  store:
    build:
      context: ./
      dockerfile: Dockerfile.store
    restart: always
    env_file:
          - .env.dev

    ports:
      - "8080:8080"
    networks:
      - store-network

    volumes:
      - store_data:/app
    depends_on:
      - postgres
  postgres:
    image: postgres:15-alpine
    env_file:
      - .env.dev 

    volumes:
      - ./init/pg_hba.conf:/etc/pg_hba.conf
      - ./init:/docker-entrypoint-initdb.d
      - ./init/postgresql.conf:/etc/postgresql.conf
      - postgres_data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql.conf"
      - "-c"
      - "hba_file=/etc/pg_hba.conf"


    ports:
      - "5435:5432"
    networks:
      - store-network


  retrieval:
    build:
      context: ./
      dockerfile: Dockerfile.retrieval
    restart: always
    env_file:
          - .env.dev
 
    ports:
      - "80:8081"
    networks:
      - store-network

    depends_on:
      - postgres_retrieval
  postgres_retrieval:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: test
      POSTGRES_PORT: 5433

    volumes:
      - ./init/pg_hba.conf:/etc/pg_hba.conf
      - ./init/postgresql.conf:/etc/postgresql.conf
      - postgres_gateway_data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-p"
      - "5433"
      - "-c"
      - "config_file=/etc/postgresql.conf"
      - "-c"
      - "hba_file=/etc/pg_hba.conf"

    ports:
      - "5437:5433"
    networks:
      - store-network

volumes:
  postgres_data:
  postgres_gateway_data:
  store_data:


networks:
  store-network: